---
- name: Package management with optimization
  block:
    - name: Update package cache and upgrade system
      apt:
        update_cache: true
        cache_valid_time: "{{ update_strategy.update_cache_valid_time | default(3600) }}"
        upgrade: dist
        autoremove: true
        autoclean: true
        dpkg_options: 'force-confdef,force-confold'
      register: package_upgrade_result
      when: system_config.update_packages | default(true)
      tags: ['package-update']

    - name: Check if reboot is required
      stat:
        path: "{{ update_strategy.reboot_required_file | default('/var/run/reboot-required') }}"
      register: reboot_required_file
      when: package_upgrade_result is defined
      tags: ['reboot-check']

    - name: Set reboot required fact
      set_fact:
        ansible_reboot_required: true
      when: 
        - reboot_required_file is defined
        - reboot_required_file.stat.exists
      tags: ['reboot-check']

    - name: Install essential packages in batches
      apt:
        name: "{{ batch }}"
        state: present
        update_cache: false
        install_recommends: false
      loop: "{{ system_config.essential_packages | batch(5) | list }}"
      loop_control:
        loop_var: batch
        index_var: batch_index
        label: >-
          {% set total_pkgs = (system_config.essential_packages | default([])) %}
          {% set total_batches = (total_pkgs | length > 0) | ternary(((total_pkgs | length / 5) | round(0, 'ceil') | int), 0) %}
          Installing batch {{ batch_index + 1 }}/{{ total_batches }}
      when: system_config.install_essential_packages | default(true)
      tags: ['essential-packages']

    - name: Hold critical packages from automatic updates
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      loop:
        - pve-kernel-6.5
        - proxmox-ve
      ignore_errors: true
      when: system_config.hold_critical_packages | default(false)
      tags: ['package-hold']

    - name: Install Proxmox VE kernel (if needed)
      apt:
        name: 
          - "pve-kernel-{{ ansible_kernel.split('-')[0] }}"
          - pve-headers
        state: present
      when: 
        - system_config.install_pve_kernel | default(true)
        - ansible_kernel is not search("pve")
      notify: "system reboot"
      tags: ['pve-kernel']

    - name: Clean package cache
      apt:
        autoclean: true
        autoremove: true
      when: maintenance_schedule.enable_automatic_cleanup | default(true)
      tags: ['cleanup']

  rescue:
    - name: Package management failed
      debug:
        msg: "Package management failed. Some packages may not be installed."
      tags: ['always']
